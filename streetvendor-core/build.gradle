bootJar { enabled = false }
jar { enabled = true }

dependencies {
    // JPA
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Redis
    implementation('org.springframework.boot:spring-boot-starter-data-redis')

    // Embedded-Redis
    implementation ('it.ozimov:embedded-redis:0.7.2')

    // H2
    runtimeOnly 'com.h2database:h2'

    // MySQL
    runtimeOnly 'mysql:mysql-connector-java'

    // External Module
    implementation project(":streetvendor-external")

    // Session
    implementation('org.springframework.session:spring-session:1.3.5.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')


    // QueryDSL
    implementation("com.querydsl:querydsl-jpa")
    implementation("com.querydsl:querydsl-core")
    annotationProcessor("com.querydsl:querydsl-apt::jpa")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // Web MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'


}

def queryDslDir = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [queryDslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(queryDslDir)
}

clean.doLast {
    file(queryDslDir).deleteDir()
}
